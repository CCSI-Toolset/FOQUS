name: Nightlies

on:
  schedule:
    # run daily at 5:00 am UTC (12 am ET/9 pm PT)
    - cron: '0 5 * * *'
  repository_dispatch:
    # to run this, send a POST API call at repos/<user>/<repo>/dispatches with the specified event_type
    # e.g. `gh repos/CCSI-Toolset/FOQUS/dispatches -F event_type=ci_run_nightlies`
    types: [ci_run_nightlies]
  workflow_dispatch:
  # FIXME remove before merging in
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  user-install-run:
    name: User-style install/run (${{ matrix.foqus-install-target }}/${{ matrix.os }}/py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      # FIXME change to "false" before merging
      fail-fast: false
      matrix:
        python-version:
          # - '3.6'
          - '3.7'
          # - '3.8'
          # - '3.9'
        os:
          # - ubuntu-18.04
          - ubuntu-20.04
          - windows-2019
          - macos-10.15
        foqus-install-target:
          - stable
          - master
          - dot
        examples-release:
          - '3.9.0'
        include:
          - foqus-install-target: stable
            pip-install-target: ccsi-foqus
          - foqus-install-target: master
            pip-install-target: https://github.com/CCSI-Toolset/FOQUS/archive/master.zip
          - foqus-install-target: dot
            pip-install-target: '.'
    steps: 
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
      - uses: actions/checkout@v2
        if: matrix.foqus-install-target == 'dot'
      - name: Set up GUI test environment
        if: contains(matrix.os, 'ubuntu')
        run: |
          echo "QT_QPA_PLATFORM=minimal" >> $GITHUB_ENV
      - name: Install FOQUS in a Conda env (user mode)
        shell: bash -l {0}
        env:
          py_ver: ${{ matrix.python-version }}
          pip_install_target: ${{ matrix.pip-install-target }}
        run: |
          echo '::group::Output of conda create/activate/install'
          conda create --name ccsi-foqus --quiet --yes python="$py_ver"
          conda activate ccsi-foqus
          conda install --yes -c CCSI-Toolset -c conda-forge psuade-lite
          echo '::endgroup::'
          echo '::group::Output of pip install/list/show'
          pip install --progress-bar off "$pip_install_target"
          pip list
          pip show ccsi-foqus PyQt5
          echo '::endgroup::'
          foqus --help
          # this starts the FOQUS GUI in the background, waits a few seconds, and then kills the process (%1: PID of last background job)
          # if FOQUS crashes before then, the kill command will fail resulting in an overall error exit code
          foqus & sleep 10 ; kill -9 %1
      - name: Install download tools (Windows)
        if: contains(matrix.os, 'windows')
        run:
          choco install wget
      - name: Download and test examples (${{ matrix.examples-release }})
        shell: bash -l {0}
        env:
          base_url: https://github.com/CCSI-Toolset/FOQUS/releases/download
          release: ${{ matrix.examples-release }}
        run: |
          rm -r "$PWD"/examples/ || echo "No examples directory found. It will be downloaded"
          wget --no-verbose "$base_url/$release/ccsi-foqus-$release-examples.zip" --output-document examples.zip
          unzip -q examples.zip
          echo '::group::Content of examples directory'
          ls -Ralh "$PWD"/examples/
          echo '::endgroup::'
          conda activate ccsi-foqus
          foqus --load ./examples/test_files/Optimization/Opt_Test_01.foqus --run opt --out test_opt.foqus
